#!/bin/bash
   echo '
  ___   ___   _  _     _   _   ___   ___   ___     __  __    ___    _  _   ___   _____    ___    ___   ___   _  _    ___ 
 / __| / __| | || |   | | | | / __| | __| | _ \   |  \/  |  / _ \  | \| | |_ _| |_   _|  / _ \  | _ \ |_ _| | \| |  / __|
 \__ \ \__ \ | __ |   | |_| | \__ \ | _|  |   /   | |\/| | | (_) | | .` |  | |    | |   | (_) | |   /  | |  | .` | | (_ |
 |___/ |___/ |_||_|    \___/  |___/ |___| |_|_\   |_|  |_|  \___/  |_|\_| |___|   |_|    \___/  |_|_\ |___| |_|\_|  \___|

                                    by ArashpMD'

function reset_all_traffic() {
    # Reset all numbers in front of TX and RX in the SSH_Usage.json file
    jq '.[] |= {name: .name, RX: 0, TX: 0}' SSH_Usage.json > temp.json && mv temp.json SSH_Usage.json
    echo "${GREEN}All user traffic has been reset.${RESET}"
}


# Display SSH usage in a table format

# Define coloring using tput
RED=$(tput setaf 1)
CYAN=$(tput setaf 6)
BLUE=$(tput setaf 4)
WHITE=$(tput setaf 7)
PURPLE=$(tput setaf 5)
RESET=$(tput sgr0)

# Check the status of the service
status1=$(systemctl is-active ssh_usage_monitor.service)
enabled1=$(systemctl is-enabled ssh_usage_monitor.service)
echo -e "${PURPLE}Status Check:${RESET}"
# Print the results
echo -e "${BLUE}Status of ssh_usage_monitor.service: $status1"
echo -e "ssh_usage_monitor.service is $enabled1.${RESET}"


echo -e "${RED}SSH Usage:${RESET}\n"

# Print the header
echo -e "${BLUE}USER           KB Sent       KB Received${RESET}"

# Fetch and format the JSON data
cat /SSH_Usage.json | jq -r '.[] | "\(.name) \(.TX) \(.RX)"' | \
awk -F: '{print $2}' | \
awk -v white="$WHITE" -v purple="$PURPLE" '{printf "%s%-15s %s%10.2f %s%10.2f%s\n", white, $1, purple, $2, purple, $3, white}' | \
sort -k1 | \
column -t

echo "-------------------------------------------"

function display_menu() {
    echo -e "${RED}SSH Usage Monitor Menu${RESET}"
    echo "1. Start/Stop ssh_usage_monitor.service now"
    echo "2. Toggle Enable/Disable ssh_usage_monitor.service at system startup"
    echo "3. Reset All Users' Traffic"
    echo "4. Exit"
    echo -e "Enter choice [1-4]: \c"
}
# Show the menu and capture user input
while true; do
    display_menu
    read choice
    case $choice in
        1)
            status=$(systemctl is-active ssh_usage_monitor.service)
            if [ "$status" == "active" ]; then
                sudo systemctl stop ssh_usage_monitor.service
                echo "${GREEN}ssh_usage_monitor.service stopped.${RESET}"
            else
                sudo systemctl start ssh_usage_monitor.service
                echo "${GREEN}ssh_usage_monitor.service started.${RESET}"
            fi
            ;;
        2)
            isEnabled=$(systemctl is-enabled ssh_usage_monitor.service)
            if [ "$isEnabled" == "enabled" ]; then
                sudo systemctl disable ssh_usage_monitor.service
                echo "${GREEN}ssh_usage_monitor.service disabled.${RESET}"
            else
                sudo systemctl enable ssh_usage_monitor.service
                echo "${GREEN}ssh_usage_monitor.service enabled.${RESET}"
            fi
            ;;
        3)
            reset_all_traffic
            ;;
        4)
            echo "${RED}Exiting...${RESET}"
            exit 0
            ;;
        *)
            echo "${RED}Invalid choice, please choose again.${RESET}"
            ;;
    esac

    sleep 2
    clear
done
