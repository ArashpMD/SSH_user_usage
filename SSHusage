#!/bin/bash
   echo '
  ___   ___   _  _     _   _   ___   ___   ___     __  __    ___    _  _   ___   _____    ___    ___   ___   _  _    ___ 
 / __| / __| | || |   | | | | / __| | __| | _ \   |  \/  |  / _ \  | \| | |_ _| |_   _|  / _ \  | _ \ |_ _| | \| |  / __|
 \__ \ \__ \ | __ |   | |_| | \__ \ | _|  |   /   | |\/| | | (_) | | .` |  | |    | |   | (_) | |   /  | |  | .` | | (_ |
 |___/ |___/ |_||_|    \___/  |___/ |___| |_|_\   |_|  |_|  \___/  |_|\_| |___|   |_|    \___/  |_|_\ |___| |_|\_|  \___|

                                    by ArashpMD'
# Function to display the menu
show_menu() {
 
 
    echo -e "\e[33mSSH Usage Monitor Menu\e[0m"  # Yellow color for the title

    if systemctl is-active --quiet ssh_usage_monitor.service; then
        echo -e "\e[32m1. Stop ssh_usage_monitor service now\e[0m"
    else
        echo -e "\e[32m1. Start ssh_usage_monitor service now\e[0m"
    fi

    if systemctl is-enabled --quiet ssh_usage_monitor.service; then
        echo -e "\e[32m2. Disable ssh_usage_monitor service at system reboot \e[0m"
    else
        echo -e "\e[32m2. Enable ssh_usage_monitor service at system reboot \e[0m"
    fi

    echo -e "\e[32m3. Exit\e[0m"
}

# Display SSH usage in a table format

# Define coloring using tput
CYAN=$(tput setaf 6)
BLUE=$(tput setaf 4)
WHITE=$(tput setaf 7)
PURPLE=$(tput setaf 5)
RESET=$(tput sgr0)

echo "${CYAN}SSH Usage:${RESET}\n"

# Print the header
echo -e "${BLUE}USER           KB Sent       KB Received${RESET}"

# Fetch and format the JSON data
cat SSH_Usage.json | jq -r '.[] | "\(.name) \(.TX) \(.RX)"' | \
awk -F: '{print $2}' | \
awk -v white="$WHITE" -v purple="$PURPLE" '{printf "%s%-15s %s%10.2f %s%10.2f%s\n", white, $1, purple, $2, purple, $3, white}' | \
sort -k1 | \
column -t

echo "-------------------------------------------"


# Show the menu and capture user input
while true; do
    show_menu
    read -p "Enter your choice: " choice

    case $choice in
        1) 
            if systemctl is-active --quiet ssh_usage_monitor.service; then
                sudo systemctl stop ssh_usage_monitor.service && echo -e "\e[32mService stopped successfully!\e[0m" || echo -e "\e[31mFailed to stop the service.\e[0m"
            else
                sudo systemctl start ssh_usage_monitor.service && echo -e "\e[32mService started successfully!\e[0m" || echo -e "\e[31mFailed to start the service.\e[0m"
            fi
            ;;
        2) 
            if systemctl is-enabled --quiet ssh_usage_monitor.service; then
                sudo systemctl disable ssh_usage_monitor.service && echo -e "\e[32mService disabled successfully!\e[0m" || echo -e "\e[31mFailed to disable the service.\e[0m"
            else
                sudo systemctl enable ssh_usage_monitor.service && echo -e "\e[32mService enabled successfully!\e[0m" || echo -e "\e[31mFailed to enable the service.\e[0m"
            fi
            ;;
        3) exit 0;;
        *) echo -e "\e[31mInvalid choice. Please try again.\e[0m";;  # Red color for error message
    esac
done
